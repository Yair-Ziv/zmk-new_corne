#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

#define ZMK_MOUSE_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_MOUSE_DEFAULT_SCRL_VAL 20    // 10
#define U_MS_U &mmv MOVE_UP
#define U_MS_D &mmv MOVE_DOWN
#define U_MS_L &mmv MOVE_LEFT
#define U_MS_R &mmv MOVE_RIGHT

/ {
    behaviors {
        td_caps: td_caps {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_CAPS";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&d_shift>, <&kp CAPSLOCK>;
        };

        snake_caps: snake_caps {
            compatible = "zmk,behavior-caps-word";
            label = "SNAKE_CAPS";
            #binding-cells = <0>;
            continue-list = <MINUS UNDERSCORE DELETE BACKSPACE>;
        };

        td_copy_paste: td_copy_paste {
            compatible = "zmk,behavior-tap-dance";
            label = "TD_COPY_PASTE";
            #binding-cells = <0>;
            bindings = <&kp ESC>, <&kp LG(C)>, <&kp LG(V)>;
        };

        htrl: htrl {
            compatible = "zmk,behavior-hold-tap";
            label = "HTRL";
            bindings = <&none>, <&none>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <900>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <1>;      // 0
            time-to-max-speed-ms = <400>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        label = "RGB_ENCODER";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <30>;
    };

    combos {
        compatible = "zmk,combos";

        gh_dash {
            bindings = <&kp MINUS>;
            key-positions = <18 20>;
        };

        bn_underscore {
            bindings = <&kp UNDER>;
            key-positions = <31 33>;
        };

        ty_snake {
            bindings = <&snake_caps>;
            key-positions = <5 7>;
        };

        sd_d_equals {
            bindings = <&d_equals>;
            key-positions = <15 16>;
        };

        se_g_equals {
            bindings = <&g_equals>;
            key-positions = <14 2>;
        };

        sc_l_equals {
            bindings = <&l_equals>;
            key-positions = <14 28>;
        };

        tltr_sleep {
            bindings = <&kp C_SLEEP>;
            key-positions = <0 12>;
        };
    };

    macros {
        d_equals: d_equals {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp EQUAL>;
            label = "D_EQUALS";
        };

        g_equals: g_equals {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp GT &kp EQUAL>;
            label = "G_EQUALS";
        };

        l_equals: l_equals {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LT &kp EQUAL>;
            label = "L_EQUALS";
        };

        d_shift: d_shift {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LSHFT &kp LSHFT>;
            label = "D_SHIFT";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |                ↑    |  Y  |  U   |  I  |  O  |  P  | BKSP |      &kp UP_ARROW 
            // | SHIFT |  A  |  S  |  D  |  F  |  G  |               ↓    |  H  |  J   |  K  |  L  |  ;  |  '   | 
            // | CTRL |  Z  |  X  |  C  |  V  |  B  |                ←    |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |                →    | ENT | RSE  | ALT |
            //                                                      enter

            bindings = <
&kp TAB         &kp Q           &kp W           &kp E               &kp R            &kp T          &kp UP_ARROW     &kp Y        &kp U          &lt 4 I      &kp O       &kp P               &kp BSPC
&td_copy_paste  &mt LEFT_GUI A  &mt S LEFT_ALT  &mt D LCTRL         &kp F            &kp G          &kp DOWN_ARROW   &kp H        &kp J          &mt RCTRL K  &mt RALT L  &mt RIGHT_GUI SEMI  &kp RIGHT_COMMAND
&td_caps        &kp Z           &kp X           &kp C               &kp V            &kp B          &kp LEFT_ARROW   &kp N        &kp M          &kp COMMA    &kp DOT     &kp FSLH            &kp ESC
                                &kp SPACE       &lt 5 LEFT_COMMAND  &lt 3 BACKSPACE  &lt 1 SPACE    &kp RIGHT_ARROW  &lt 2 ENTER  &mt RCTRL DEL  &kp RALT
                                                                                                    &kp ENTER
            >;

            label = "QWERTY";
            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        symbols_layer {
            bindings = <
&kp GRAVE  &kp TILDE  &kp LT     &kp GT     &kp CARET   &kp PIPE    &none  &kp AMPS   &kp BSLH  &kp LBRC  &kp RBRC  &none      &kp BACKSPACE
&none      &kp ESC    &kp MINUS  &kp PLUS   &kp EQUAL   &kp SQT     &none  &kp DQT    &none     &kp LPAR  &kp RPAR  &kp COLON  &none
&none      &none      &kp SLASH  &kp ASTRK  &kp DOLLAR  &none       &none  &none      &none     &kp LBKT  &kp RBKT  &none      &none
                      &none      &none      &none       &none       &none  &kp ENTER  &none     &none
                                                                    &none
            >;

            label = "SYM";
        };

        numbers_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &mmv MOVE_UP     &kp CARET  &kp AMPS  &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&none    &kp N1    &kp N2  &kp N3    &kp N4    &kp N5       &mmv MOVE_DOWN   &kp N6     &kp N7    &kp N8     &kp N9    &kp N0    &none
&kp F11  &kp F1    &kp F2  &kp F3    &kp F4    &kp F5       &mmv MOVE_LEFT   &kp F6     &kp F7    &kp F8     &kp F9    &kp F10   &kp F12
                   &none   &none     &none     &kp SPACE    &mmv MOVE_RIGHT  &none      &none     &none
                                                            &mkp LCLK
            >;

            label = "NUM";
            sensor-bindings = <&scroll_encoder>;
        };

        navaigation_layer {
            bindings = <
&none  &none     &kp UP    &kp PG_UP  &none     &none        &none  &none      &none     &none   &none      &none  &none
&none  &kp LEFT  &kp DOWN  &kp RIGHT  &kp HOME  &kp END      &none  &kp LEFT   &kp DOWN  &kp UP  &kp RIGHT  &none  &none
&none  &none     &none     &kp PG_DN  &none     &none        &none  &none      &none     &none   &none      &none  &none
                 &none     &none      &none     &kp SPACE    &none  &kp ENTER  &none     &none
                                                             &none
            >;

            label = "NAV";
        };

        i_layer {
            bindings = <
&none  &none  &none  &none  &none  &none    &none  &none  &kp BACKSPACE  &none  &kp DELETE  &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none          &none  &none       &none  &none
&none  &none  &none  &none  &none  &none    &none  &none  &none          &none  &none       &none  &none
              &none  &none  &none  &none    &none  &none  &none          &none
                                            &none
            >;

            label = "I";
        };

        system_layer {
            bindings = <
&none       &out OUT_BLE  &out OUT_USB     &none         &none         &none           &rgb_ug RGB_SPI  &none            &none           &none     &none       &none       &none
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1     &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &rgb_ug RGB_SPD  &none            &kp C_PREV      &kp C_PP  &kp C_NEXT  &kp C_STOP  &none
&none       &none         &none            &none         &none         &none           &rgb_ug RGB_BRD  &kp PRINTSCREEN  &kp LG(LS(N4))  &none     &none       &none       &none
                          &rgb_ug RGB_EFF  &none         &none         &none           &rgb_ug RGB_BRI  &none            &none           &none
                                                                                       &rgb_ug RGB_TOG
            >;

            label = "SYS";
        };
    };
};
